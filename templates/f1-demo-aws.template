{
    "AWSTemplateFormatVersion": "2010-09-09",
    "Description": "This template...",
    "Metadata": {
        "AWS::CloudFormation::Interface": {
            "ParameterGroups": [
                {
                    "Label": {
                        "default": "Network Configuration"
                    },
                    "Parameters": [
                        "VPCID",
                        "CIDRBlockCluster",
                        "PrivateSubnet1ID",
                        "PrivateSubnet2ID",
                        "PrivateSubnet3ID",
                        "PublicSubnet1ID",
                        "PublicSubnet2ID",
                        "PublicSubnet3ID",
                        "AdminIngressLocation"
                    ]
                },
                {
                    "Label": {
                        "default": "Spotfire Studio Configuration"
                    },
                    "Parameters": [
                        "InstanceType",
                        "VolSize",
                        "KeyName"
                    ]
                },
                {
                    "Label": {
                        "default": "Database Setup"
                    },
                    "Parameters": [
                        "DBUsername",
                        "DBPassword"
                    ]
                }
            ],
            "ParameterLabels": {
                "AdminIngressLocation": {
                    "default": "Admin Ingress Location:"
                },
                "CIDRBlockCluster": {
                    "default": "VPC CIDR:"
                },
                "DBPassword": {
                    "default": "Aurora DB password:"
                },
                "DBUsername": {
                    "default": "Aurora DB username:"
                },
                "InstanceType": {
                    "default": "Spotfire Instance Type:"
                },
                "KeyName": {
                    "default": "Key Pair:"
                },
                "PrivateSubnet1ID": {
                    "default": "Private Subnet ID 1:"
                },
                "PrivateSubnet2ID": {
                    "default": "Private Subnet ID 2:"
                },
                "PrivateSubnet3ID": {
                    "default": "Private Subnet ID 3:"
                },
                "PublicSubnet1ID": {
                    "default": "Public Subnet ID 1:"
                },
                "PublicSubnet2ID": {
                    "default": "Public Subnet ID 2:"
                },
                "PublicSubnet3ID": {
                    "default": "Public Subnet ID 3:"
                },
                "VPCID": {
                    "default": "VPC ID"
                },
                "VolSize": {
                    "default": "Spotfire Instance Volume Size:"
                }
            }
        }
    },
    "Parameters": {
        "AdminIngressLocation": {
            "AllowedPattern": "(\\d{1,3})\\.(\\d{1,3})\\.(\\d{1,3})\\.(\\d{1,3})/(\\d{1,2})",
            "ConstraintDescription": "Must be a valid IP CIDR range of the form x.x.x.x/x",
            "Description": "CIDR block (IP address range) to allow SSH and VNC access to your TCI-BW studio instance. Use 0.0.0.0/0 to allow access from all locations. You can always manually change this later if needed.",
            "MaxLength": "18",
            "MinLength": "9",
            "Type": "String"
        },
        "CIDRBlockCluster": {
            "AllowedPattern": "^(([0-9]|[1-9][0-9]|1[0-9]{2}|2[0-4][0-9]|25[0-5])\\.){3}([0-9]|[1-9][0-9]|1[0-9]{2}|2[0-4][0-9]|25[0-5])(\\/(1[6-9]|2[0-8]))$",
            "ConstraintDescription": "CIDR block parameter must be in the form x.x.x.x/16-28",
            "Default": "10.0.0.0/16",
            "Description": "CIDR block for the VPC",
            "Type": "String"
        },
        "DBPassword": {
            "ConstraintDescription": "This password needs to be set for your Aurora DB. The max length of this password is 12 characters, the min length is 8 characters",
            "Description": "Password to access Aurora DB",
            "MaxLength": 12,
            "MinLength": 8,
            "NoEcho": "true",
            "Type": "String"
        },
        "DBUsername": {
            "Description": "Username for Aurora DB",
            "Type": "String"
        },
        "InstanceType": {
            "AllowedValues": [
                "t3.large",
                "t3.xlarge",
                "t3.2xlarge",
                "m5.large",
                "m5.xlarge",
                "m5.2xlarge",
                "m5.4xlarge",
                "m5.12xlarge",
                "c5n.large",
                "c5n.xlarge",
                "c5n.2xlarge",
                "c5n.4xlarge",
                "c5.large",
                "c5.xlarge",
                "c5.2xlarge",
                "c5.4xlarge"
            ],
            "ConstraintDescription": "InstanceType must be a valid EC2 instance type.",
            "Default": "m5.large",
            "Description": "Select an instance type to run Spotfire",
            "Type": "String"
        },
        "KeyName": {
            "AllowedPattern": "[-_ a-zA-Z0-9]*",
            "ConstraintDescription": "Must be the name of an existing key pair. It can contain only alphanumeric characters, spaces, dashes and underscores.",
            "Description": "Select an existing key pair. You must provide existing key pair to be able to SSH into EC2 instances.",
            "MaxLength": 64,
            "MinLength": 1,
            "Type": "AWS::EC2::KeyPair::KeyName"
        },
        "PrivateSubnet1ID": {
            "Description": "ID of private subnet 1 in Availability Zone 1 for the Workload (e.g., subnet-c0236ecd)",
            "Type": "AWS::EC2::Subnet::Id"
        },
        "PrivateSubnet2ID": {
            "Description": "ID of private subnet 2 in Availability Zone 2 for the Workload (e.g., subnet-bdf5347d)",
            "Type": "AWS::EC2::Subnet::Id"
        },
        "PrivateSubnet3ID": {
            "Description": "ID of private subnet 3 in Availability Zone 3 for the Workload (e.g., subnet-bdf5347d)",
            "Type": "AWS::EC2::Subnet::Id"
        },
        "PublicSubnet1ID": {
            "Description": "ID of public subnet 1 in Availability Zone 1",
            "Type": "AWS::EC2::Subnet::Id"
        },
        "PublicSubnet2ID": {
            "Description": "ID of public subnet 2 in Availability Zone 2",
            "Type": "AWS::EC2::Subnet::Id"
        },
        "PublicSubnet3ID": {
            "Description": "ID of public subnet 1 in Availability Zone 3",
            "Type": "AWS::EC2::Subnet::Id"
        },
        "VPCID": {
            "Description": "ID of your existing VPC for deployment",
            "Type": "AWS::EC2::VPC::Id"
        },
        "VolSize": {
            "ConstraintDescription": "VolumeSize must be numeric and between 60 and 16384.",
            "Default": 60,
            "Description": "Volume Size (GB) for ECS cluster instances.",
            "MaxValue": 16384,
            "MinValue": 60,
            "Type": "Number"
        }
    },
    "Conditions": {
        "GovCloudCondition": {
            "Fn::Equals": [
                {
                    "Ref": "AWS::Region"
                },
                "us-gov-west-1"
            ]
        },
        "HasVolSize": {
            "Fn::Not": [
                {
                    "Fn::Equals": [
                        {
                            "Ref": "VolSize"
                        },
                        ""
                    ]
                }
            ]
        }
    },
    "Rules": {
        "SubnetsInVPC": {
            "Assertions": [
                {
                    "Assert": {
                        "Fn::EachMemberIn": [
                            {
                                "Fn::ValueOfAll": [
                                    "AWS::EC2::Subnet::Id",
                                    "VpcId"
                                ]
                            },
                            {
                                "Fn::RefAll": "AWS::EC2::VPC::Id"
                            }
                        ]
                    },
                    "AssertDescription": "All subnets must be in the VPC"
                }
            ]
        }
    },
    "Mappings": {
        "AWSAMIRegionMap": {
            "eu-west-1": {
                "AMI": "ami-0fc35be881cce108c"
            }
        }
    },
    "Resources": {
        "SpotfireSecurityGroup": {
            "Type": "AWS::EC2::SecurityGroup",
            "Properties": {
                "VpcId": {
                    "Ref": "VPCID"
                },
                "GroupDescription": "Security group for EC2 instance running TIBCO Spotfire.",
                "SecurityGroupIngress": [
                    {
                        "IpProtocol": "tcp",
                        "CidrIp": {
                            "Ref": "AdminIngressLocation"
                        },
                        "FromPort": "3389",
                        "ToPort": "3389"
                    },
                    {
                        "CidrIp": {
                            "Ref": "CIDRBlockCluster"
                        },
                        "IpProtocol": -1
                    }
                ],
                "Tags": [
                    {
                        "Key": "Name",
                        "Value": {
                            "Fn::Sub": "${AWS::StackName}-Spotfire-Security"
                        }
                    }
                ]
            }
        },
        "AuroraSecurityGroup": {
            "Type": "AWS::EC2::SecurityGroup",
            "Properties": {
                "VpcId": {
                    "Ref": "VPCID"
                },
                "GroupDescription": "Security group for Aurora DB",
                "SecurityGroupIngress": [
                    {
                        "CidrIp": {
                            "Ref": "AdminIngressLocation"
                        },
                        "IpProtocol": "tcp",
                        "FromPort": "3306",
                        "ToPort": "3306"
                    },
                    {
                        "CidrIp": {
                            "Ref": "CIDRBlockCluster"
                        },
                        "FromPort": "3306",
                        "ToPort": "3306",
                        "IpProtocol": "tcp"
                    }
                ]
            }
        },
        "LDMSecurityGroup": {
            "Type": "AWS::EC2::SecurityGroup",
            "Properties": {
                "VpcId": {
                    "Ref": "VPCID"
                },
                "GroupDescription": "Security group for LDM container",
                "SecurityGroupIngress": [
                    {
                        "CidrIp": {
                            "Ref": "CIDRBlockCluster"
                        },
                        "IpProtocol": -1
                    },
                    {
                        "CidrIp": {
                            "Ref": "AdminIngressLocation"
                        },
                        "IpProtocol": "tcp",
                        "FromPort": "10080",
                        "ToPort": "10080"
                    }
                ]
            }
        },
        "SpotfireEC2Setup": {
            "Type": "AWS::EC2::Instance",
            "Properties": {
                "ImageId": {
                    "Fn::FindInMap": [
                        "AWSAMIRegionMap",
                        {
                            "Ref": "AWS::Region"
                        },
                        "AMI"
                    ]
                },
                "InstanceType": {
                    "Ref": "InstanceType"
                },
                "KeyName": {
                    "Ref": "KeyName"
                },
                "SecurityGroupIds": [
                    {
                        "Ref": "SpotfireSecurityGroup"
                    }
                ],
                "SubnetId": {
                    "Ref": "PublicSubnet1ID"
                },
                "Tags": [
                    {
                        "Key": "Name",
                        "Value": {
                            "Fn::Sub": "${AWS::StackName} - Spotfire"
                        }
                    }
                ]
            }
        },
        "ECSCluster": {
            "Type": "AWS::ECS::Cluster",
            "Properties": {
                "ClusterName": {
                    "Ref": "AWS::StackName"
                }
            }
        },
        "LDMTaskDefinition": {
            "Type": "AWS::ECS::TaskDefinition",
            "Properties": {
                "ContainerDefinitions": [
                    {
                        "Image": "ayh20/f1_ldm",
                        "Memory": 8192,
                        "Cpu": 4096,
                        "Name": "f1-ldm",
                        "PortMappings": [
                            {
                                "ContainerPort": 10080,
                                "HostPort": 10080,
                                "Protocol": "tcp"
                            },
                            {
                                "ContainerPort": 2000,
                                "HostPort": 2000,
                                "Protocol": "tcp"
                            },
                            {
                                "ContainerPort": 10000,
                                "HostPort": 10000,
                                "Protocol": "tcp"
                            }
                        ],
                        "Environment": [
                            {
                                "Name": "NODENAME",
                                "Value": "A.f1-ldm"
                            }
                        ]
                    }
                ],
                "Memory": "8192",
                "Cpu": "4096",
                "NetworkMode": "awsvpc",
                "RequiresCompatibilities": [
                    "FARGATE"
                ],
                "Family": "f1-demo"
            }
        },
        "LDMService": {
            "Type": "AWS::ECS::Service",
            "Properties": {
                "Cluster": {
                    "Ref": "ECSCluster"
                },
                "DesiredCount": 1,
                "ServiceName": "LVHost",
                "LaunchType": "FARGATE",
                "NetworkConfiguration": {
                    "AwsvpcConfiguration": {
                        "AssignPublicIp": "ENABLED",
                        "SecurityGroups": [
                            {
                                "Ref": "LDMSecurityGroup"
                            }
                        ],
                        "Subnets": [
                            {
                                "Ref": "PublicSubnet1ID"
                            },
                            {
                                "Ref": "PublicSubnet2ID"
                            },
                            {
                                "Ref": "PublicSubnet3ID"
                            }
                        ]
                    }
                },
                "TaskDefinition": {
                    "Ref": "LDMTaskDefinition"
                }
            }
        },
        "dbSubnetGroup": {
            "Type": "AWS::RDS::DBSubnetGroup",
            "Properties": {
                "DBSubnetGroupDescription": "Subnet group for Aurora DB.",
                "DBSubnetGroupName": "aurorasubnet",
                "SubnetIds": [
                    {
                        "Ref": "PublicSubnet1ID"
                    },
                    {
                        "Ref": "PublicSubnet2ID"
                    },
                    {
                        "Ref": "PublicSubnet3ID"
                    }
                ]
            }
        },
        "AuroraDBCluster": {
            "Type": "AWS::RDS::DBCluster",
            "Properties":
            {
                "DBClusterIdentifier": "f1-demo-aurora",
                "DBSubnetGroupName": "aurorasubnet",
                "Engine": "aurora-mysql",
                "VpcSecurityGroupIds": [
                    {
                        "Ref": "AuroraSecurityGroup"
                    }
                ],
                "MasterUsername": {
                    "Ref": "DBUsername"
                },
                "MasterUserPassword": {
                    "Ref": "DBPassword"
                },
                "DBClusterParameterGroupName": "default.aurora-mysql5.7"
            }
        },
        "AuroraDBInstance": {
            "Type": "AWS::RDS::DBInstance",
            "Properties": {
                "DBSubnetGroupName": "aurorasubnet",
                "Engine": "aurora-mysql",
                "DBClusterIdentifier": {
                    "Ref": "AuroraDBCluster"
                },
                "PubliclyAccessible": "true",
                "DBInstanceClass": "db.r4.large",
                "DBParameterGroupName": "default.aurora-mysql5.7"
            }
        }
    },
    "Outputs": {
        "SpotfireEC2Instance": {
            "Description": "IP address of the EC2 instance running Spotfire",
            "Value": {
                "Fn::GetAtt": [
                    "SpotfireEC2Setup",
                    "PublicIp"
                ]
            }
        },
        "ECSClusterName": {
            "Description": "Name of the ECS Cluster created",
            "Value": {
                "Ref": "ECSCluster"
            }
        },
        "ECSCluster": {
            "Description": "A reference to the ECS cluster.",
            "Value": {
                "Fn::Sub": "https://console.aws.amazon.com/ecs/home?region=${AWS::Region}#/clusters/${ECSCluster}/services"
            }
        }
    }
}
